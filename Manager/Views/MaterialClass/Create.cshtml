@model object

@{
	ViewBag.Title = "Create";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var Selects = (Dictionary<string, List<SelectListItem>>)ViewBag.Selects;
	var type = Model.GetType();
}

<h2>Create</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>PipingMaterialsClassData</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.Hidden("typeName", (string)ViewBag.TypeName)

		@foreach (var prop in type.GetProperties())
		{
			var val = type.GetProperty(prop.Name).GetValue(Model);

			if (Selects.ContainsKey(prop.Name))
			{
				<div class="form-group">
					@Html.Label(prop.Name, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9 dropdown">
						@Html.DropDownList(prop.Name, Selects["MaterialsOfConstructionClass"], "", new { htmlAttributes = new { @class = "form-control" } })
					</div>
				</div>
			}
			else
			{
				<div class="form-group">
					@Html.Label(prop.Name, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						<input class="form-control" type="text" name="@prop.Name" value="@val" />
						@Html.ValidationMessage(prop.Name, "", new { @class = "text-danger" })
					</div>
				</div>
			}
		}

		<div class="form-group">
			<div class="col-md-offset-2 col-md-9">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index", new { n = type.Name })
</div>
